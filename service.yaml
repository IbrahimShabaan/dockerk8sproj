apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: shared-app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: shared-app
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
  type: ClusterIP

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-service
# spec:
#   type: NodePort
#   selector:
#     app: shared-app
#   ports:
#     - port: 3005
#       targetPort: 3005
#       nodePort: 30000  # Access this on <NodeIP>:30001


apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: NodePort
  selector:
    app: shared-app
  ports:
    - port: 3005
      targetPort: 3005
      nodePort: 30000  # Access this on <NodeIP>:30001

##http://service.namespace.svc.cluster.local:PORT

# apiVersion: v1
# kind: Service
# metadata:
#   name: backend
# spec:
#   type: NodePort  # Use NodePort to expose the backend service
#   ports:
#     - port: 8080  # Port exposed by the service
#       targetPort: 8080  # Port on the container
#       nodePort: 30000  # Port on the node to access the service
#   selector:
#     app: shared-app  # This matches the labels in your deployment
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: db
# spec:
#   type: ClusterIP  # Use ClusterIP for the database service
#   ports:
#     - port: 3306  # Port exposed by the service
#       targetPort: 3306  # Port on the container
#   selector:
#     app: shared-app  # This matches the labels in your database deployment
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend
# spec:
#   type: NodePort  # Use NodePort to expose the frontend service
#   ports:
#     - port: 3000  # Port exposed by the service
#       targetPort: 3000  # Port on the container
#       nodePort: 30001  # Port on the node to access the service
#   selector:
#     app: shared-app  # This matches the labels in your deployment










# # Shared Service for All Deployments
# apiVersion: v1
# kind: Service
# metadata:
#   name: shared-service
# spec:
#   selector:
#     app: shared-app         # Matches all Deployments with this label
#   type: NodePort            # Change to ClusterIP or LoadBalancer if needed
#   ports:
#     - port: 80              # Service's exposed port
#       targetPort: 3000      # Container port in the pods
#       nodePort: 30000       # NodePort (only for NodePort service type)